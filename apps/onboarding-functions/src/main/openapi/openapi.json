{
  "openapi": "3.0.3",
  "info": {
    "title": "Onboarding Functions API",
    "description": "Onboarding Functions API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://${host}/${basePath}"
    }
  ],
  "paths": {
    "/api/ResendNotification": {
      "post": {
        "tags": [
          "Notification",
          "support"
        ],
        "operationId": "sendOnboardigNotificationUsingPOST",
        "summary": "",
        "description": "",
        "parameters": [
          {
            "name": "onboardingId",
            "in": "query",
            "description": "Onboarding Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/onboardings/notifications/count": {
      "get": {
        "tags": [
          "Notification",
          "support"
        ],
        "summary": "Count notifications by filters",
        "description": "Performs for every product a count of relative onboarding notifications sent",
        "operationId": "countNotificationsUsingGET",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "from date (in YYYY-MM-DD format)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "to date (in YYYY-MM-DD format)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationCountResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/api/acknowledgment/{productId}/message/{messageId}/status/{status}": {
      "post": {
        "tags": [
          "external-v2"
        ],
        "summary": "messageAcknowledgment",
        "description": "Service to acknowledge message consumption by a consumer",
        "operationId": "messageAcknowledgmentUsingPOST",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "Kafka message unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "Kafka message consumption acknowledgment status",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "enum": [
                "ACK",
                "NACK"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AckPayloadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AckPayloadRequest": {
        "title": "AckPayloadRequest",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Acknowledgment request payload message"
          }
        }
      },
      "NotificationCountResult": {
        "title": "NotificationCountResult",
        "type": "object",
        "properties": {
          "notificationCount": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "string"
          }
        }
      },
      "InvalidParam": {
        "title": "InvalidParam",
        "required": [
          "name",
          "reason"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Invalid parameter name."
          },
          "reason": {
            "type": "string",
            "description": "Invalid parameter reason."
          }
        }
      },
      "Problem": {
        "title": "Problem",
        "required": [
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "Human-readable description of this specific problem."
          },
          "instance": {
            "type": "string",
            "description": "A URI that descacknoribes where the problem occurred."
          },
          "invalidParams": {
            "type": "array",
            "description": "A list of invalid parameters details.",
            "items": {
              "$ref": "#/components/schemas/InvalidParam"
            }
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code.",
            "format": "int32",
            "example": 500
          },
          "title": {
            "type": "string",
            "description": "Short human-readable summary of the problem."
          },
          "type": {
            "type": "string",
            "description": "A URL to a page with more details regarding the problem."
          }
        },
        "description": "A \"problem detail\" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}