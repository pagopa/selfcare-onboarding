name: Deploy

# Controls when the workflow will run
on:
  pull_request:
    branches:
      - develop
    types: [ closed ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: Select the Environment
        options:
          - dev
          - uat
          - prod

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup:
    name: Setup
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.get_env.outputs.environment }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: pull request rejected
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged != true
        run: |
          echo "❌ PR was closed without a merge"
          exit 1

      # Set Environment
      - run: echo "ENVIRNOMENT=${{ inputs.environment}}" >> $GITHUB_ENV

      - if: ${{ inputs.environment == null }}
        run: echo "ENVIRNOMENT=dev" >> $GITHUB_ENV

      - id: get_env
        name: Set Output
        run: echo "environment=${{env.ENVIRNOMENT}}" >> $GITHUB_OUTPUT


  image:
    needs: [ setup ]
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Build project with Maven
        run: mvn -B package --file onboarding-ms/pom.xml

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ghcr.io/${{ github.repository }}-ms
          tags: |
            latest
            type=ref,event=branch
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./onboarding-ms
          file: ./onboarding-ms/src/main/docker/Dockerfile.jvm 
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            GH_TOKEN=${{ secrets.READ_PACKAGES_TOKEN }}

#  deploy:
#    needs: [ image ]
#    name: Deploy to container app
#    runs-on: ubuntu-latest
#    steps:
#      # Check out the code
#      - name: Check out code
#        uses: actions/checkout@v2

      # Log in to Azure CLI
#      - name: Log in to Azure
#        uses: azure/login@v1
#        with:
#          client-id: ${{ secrets.CLIENT_ID }}
#          tenant-id: ${{ secrets.TENANT_ID }}
#          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      # Build and deploy the container app
#      - name: Build and deploy Container App
#        uses: azure/container-apps-deploy-action@v1
#        with:
#          containerAppName: ${{ github.repository }}-ms
#          containerAppEnvironment: ${{ vars.CONTAINER_APP_SELC_ENVIRONMENT_NAME }}
#          resourceGroup: ${{ vars.CONTAINER_APP_SELC_ENVIRONMENT_RESOURCE_GROUP_NAME }}
#          imageToDeploy: ghcr.io/${{ github.repository }}-ms:latest

