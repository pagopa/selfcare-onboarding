name: Deploy Container Apps infra

on:
  push:
    branches:
      - main
      - releases/*
    paths:
      - '!./infra/container_apps/onboarding-ms/env/**-pnpg'
      - './infra/container_apps/onboarding-ms/**'

  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Environment
        options: 
        - dev
        - uat
        - prod

jobs:

  release_dev:
    uses: ./.github/workflows/call_release_infra.yml
    name: '[Dev] Container Apps Infra Release'
    if: ${{ (startsWith(github.ref_name, 'releases/') != true && inputs.env == null) || inputs.env == 'dev' }}
    secrets: inherit
    with:
      environment: dev
      dir: ./infra/container_apps/onboarding-ms
      env_vars: |
        TF_VAR_image_tag=sha-$(git rev-parse --short ${{ github.sha }})

  release_uat:
    uses: ./.github/workflows/call_release_infra.yml
    name: '[UAT] Container Apps Infra Release'
    if: startsWith(github.ref_name, 'releases/')
    secrets: inherit
    with:
      environment: uat
      dir: ./infra/container_apps/onboarding-ms
      env_vars: |
        TF_VAR_image_tag=sha-$(git rev-parse --short ${{ github.sha }})

  release_prod:
    uses: ./.github/workflows/call_release_infra.yml
    name: '[Prod] Container Apps Infra Release'
    if: ${{ inputs.env == 'prod' }}
    secrets: inherit
    with:
      environment: prod
      dir: ./infra/container_apps/onboarding-ms
      env_vars: |
        TF_VAR_image_tag=sha-$(git rev-parse --short ${{ github.sha }})

  promote_release:
    name: 'Promote prerelase release'
    runs-on: ubuntu-20.04
    needs: [release_prod]

    steps:

      - name: Promote Repository Release
        run: |
          gh release edit v${{ vars.CURRENT_PROD_VERSION }} \
            --target releases/${{ env.CURRENT_PROD_VERSION }} \
            --prerelease=false \
            --latest \
            --verify-tag
