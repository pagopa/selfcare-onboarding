on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      short_env:
        type: string
        required: true
        description: add '-pnpg' if workflow is related to pnpg

# env:
#   TERRAFORM_ENVIRONMENT: ${{ inputs.tf_environment || inputs.environment }}
# variables:
#   postmanEnvFile: integration_environment
  
  # ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/uat') }}:
  #   # selfHostedAgentPool: $(UAT_AGENT_POOL)
    

  # ${{ else }}:
  #   # selfHostedAgentPool: $(DEV_AGENT_POOL)
  #   postmanEnvFile: integration_environment.json

# stages: 
#   - stage: stage_postman_test
#     
#     displayName: 'Test_e2e_on_${{ variables.environment }}'
    # condition: and(succeeded(),or(eq(variables.environment, 'DEV'), eq(variables.environment, 'UAT')))
jobs:
  test:
    environment: ${{ inputs.environment }}-ci
    name: 'Run Postman collection on ${{ inputs.environment }}'
    runs-on: ubuntu-20.04
    # pool:
    #   name: $(selfHostedAgentPool)
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        name: Checkout
      - name: 'Download postman environment'
        env: 
          INTEGRATION_ENVIRONMENT: ${{ secrets.INTEGRATION_ENVIRONMENT }}
        run: 'echo "$INTEGRATION_ENVIRONMENT" | base64 --decode > Selfcare-Integration.postman_environment.json'
        shell: bash
      - name: 'List file'
        run: 'ls -la'
        shell: bash
      - name: 'Cat file'
        run: 'cat Selfcare-Integration.postman_environment.json'
        shell: bash
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        with:
          node-version: '16.x'
      - name: Install newman
        shell: bash
        run: npm install -g newman
      
      # run newman classic
      - name: Run newman
        shell: bash
        run:  newman run ./test/newman/Selfcare-Integration.postman_collection.json -e Selfcare-Integration.postman_environment.json --reporters cli,json --reporter-json-export result/test-result.json

      - name: Cat newman report
        shell: bash
        run:  NEWMAN_RESULTS=$(cat result/test-result.json)

      - name: 'Send message on Slack'
        shell: bash
        run: >
          curl -X POST -H 'Content-type: application/json' --data '{
              "text": "Newman Test", "Results": $NEWMAN_RESULTS
          }'" ${{ secrets.SLACK_WEBHOOK_URL }}

      #       curl -X POST \
      # -H "Content-type: application/json" \
      # --data '{"text": "*Attention: There is an error in pipeline $(System.DefinitionName) in step _postman test_!*\nCheck the logs for more details $(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId) to view the build results."}' \
      # $(SLACK_WEBHOOK_URL)

      # - name: Run newman
      #   shell: bash
      #   run:  newman run ./test/newman/Selfcare-Integration.postman_collection.json -e Selfcare-Integration.postman_environment.json -r htmlextra --reporter-htmlextra-export htmlreport.html --reporter-htmlextra-darkTheme  > runreport.html

      # - name: 'List file'
      #   run: 'ls -la'
      #   shell: bash
        
      # - name: Post to a Slack channel
      #   id: slack
      #   uses: slackapi/slack-github-action@v1.27.0
      #   with:
      #     # Slack channel id, channel name, or user id to post message.
      #     # See also: https://api.slack.com/methods/chat.postMessage#channels
      #     # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
      #     channel-id: 'selfcare_test_reports'
      #     # For posting a simple plain text message
      #     slack-message: "GitHub build result: ${{ job.status }}"
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SONAR_TOKEN }}
      

      

