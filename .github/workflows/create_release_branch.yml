name: Create Release branch

on:
  workflow_dispatch:
    inputs:
      version-bump:
        required: false
        type: choice
        options:
          - major
          - minor
          - patch
        default: patch
        description: 'Major, Minor, or Patch version bump (e.g., "major", "minor", or "patch")'
  push:
    branches:
      - EC-99-pipeline-creazione-branch-di-release

jobs:
  create_branch:
    name: 'Create Release Branch'
    runs-on: ubuntu-20.04
    permissions:
      contents: write

    steps:

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        name: Checkout
        with:
          ref: main

      - name: Get Current UAT version
        id: get-version
        shell: bash
        run: |
          RELEASE_BRANCH=$(git branch -r | grep -Eo 'releases/[0-9]+\.[0-9]+' | sort -V | tail -n 1)
          echo "RELEASE_BRANCH=${RELEASE_BRANCH}" >> $GITHUB_ENV
          # run: echo "VERSION=$(git describe --match "releases/*" --abbrev=0 --tags | sed 's/releases\///')" >> $GITHUB_ENV

      # - name: Bump Version
      #   id: bump-version
      #   shell: bash
      #   run: |
      #     echo "BUMPED_VERSION=$(semver bump minor ${{ steps.get-version.outputs.VERSION }})" >> $GITHUB_ENV
      #     # ${{ inputs.version-bump }}

      - name: Set Branch Name
        id: set_branch
        shell: bash
        run: |
          # echo "NEW_BRANCH_NAME=ag/${{ steps.bump-version.outputs.BUMPED_VERSION }}" >> $GITHUB_ENV

          if [ -z "${RELEASE_BRANCH}" ]; then
            # If no existing release branches, create the first one
            NEW_BRANCH_NAME="releases/0.0.1"
          else
            # Bump the version based on the input
            OLD_VERSION=$(echo "${RELEASE_BRANCH}" | sed 's/releases\///')
            NEW_VERSION=$(semver bump patch "${OLD_VERSION}")
            NEW_BRANCH_NAME="releases/${NEW_VERSION}"
          fi
          echo "NEW_BRANCH_NAME=${NEW_BRANCH_NAME}" >> $GITHUB_ENV

      - name: Create Branch
        shell: bash
        run: |
          git checkout -b $NEW_BRANCH_NAME

      - name: Push Branch
        shell: bash
        run: |
          git push origin $NEW_BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
