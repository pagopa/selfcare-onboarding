name: Create Release branch

on:
  workflow_dispatch:
    inputs:
      version-bump:
        required: false
        type: choice
        options:
          - major
          - minor
          - patch
        default: patch
        description: 'Major, Minor, or Patch version bump (e.g., "major", "minor", or "patch")'
  push:
    branches:
      - EC-99-pipeline-creazione-branch-di-release

jobs:
  create_branch:
    name: 'Create Release Branch'
    runs-on: ubuntu-20.04
    permissions:
      contents: write

    steps:

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        name: Checkout
        with:
          ref: main
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14.x

      - name: Install semver
        run: npm install -g semver

      - name: Get Latest Release Version
        id: get-version
        run: |
          RELEASE_BRANCH=$(git branch -r | grep -Eo 'releases/[0-9]+\.[0-9]+\.[0-9]+' | sort -V | tail -n 1)
          echo "RELEASE_BRANCH=${RELEASE_BRANCH}" >> $GITHUB_ENV

      - name: Set Branch Name
        id: set_branch
        run: |

          if [ -z "${RELEASE_BRANCH}" ]; then
            NEW_BRANCH_NAME="releases/0.0.1"
          else
            OLD_VERSION=$(echo "${RELEASE_BRANCH}" | sed 's/releases\///')
            echo "old-version: $OLD_VERSION"

            NEW_VERSION=$(semver bump patch "${OLD_VERSION}")
            echo "new-version: $NEW_VERSION"

            NEW_BRANCH_NAME="releases/${NEW_VERSION}"
          fi
          echo "NEW_BRANCH_NAME=${NEW_BRANCH_NAME}" >> $GITHUB_ENV

      - name: Create Branch
        shell: bash
        run: |
          git checkout -b $NEW_BRANCH_NAME

      - name: Push Branch
        shell: bash
        run: |
          git push origin $NEW_BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
